(dp1
S'output'
p2
S"<class 'sqlite3.IntegrityError'> foreign key constraint failed"
p3
sS'layer'
p4
S'K:\\web2py_win\\web2py\\applications\\app1\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - api is an example of Hypermedia API support and access control\n#########################################################################\ndef home():\n    response.flash = "welcome to incredible varanasi"\n    #mail.send(to=[\'mehuljain811@gmail.com\'],\n          #subject=\'hello\',\n          # If reply_to is omitted, then mail.settings.sender is used\n          #reply_to=\'mehuljain811@gmail.com\',\n          #message=\'hi there\')\n\n    response.files.append(URL(\'static\', \'css/background.css\'))\n    response.files.append(URL(\'static\', \'css/grid.css\'))\n    return locals()\n\n@auth.requires_login()\ndef bank():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    i =0\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,db.place_distance.distance,orderby = ~db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="bank").select(db.places.Place_ID,db.places.place_name,db.places.rating,distinct=True)\n            #x.distance = Field.Virtual(\'distance\')\n           # x.distance=r.distance\n            #ui = r.distance\n            #x=x+r.distance\n            t3.append(x)\n        #for t3s in t3:\n         #   for enters in enter_rows:\n          #      for xs in t3s:\n         #           if xs.Place_ID==enters.place1:\n          #              xs.distance = enters.distance\n           #             ma[i] = [xs.Place_ID,xs.place_name,enters.distance]\n            #            i = i+1\n               # x = list(t3)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        bank_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="bank" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef bank_place():\n    #Note, auth.user refers to a copy of the user record stored in the session, so changing it does not affect the database record.\n    if not db.auth_user[auth.user_id]:\n        auth.logout()\n    elif auth.user and db.auth_user[auth.user_id].registration_key == \'blocked\':\n        auth.logout()\n    response.files.append(URL(\'static\', \'css/background_bank.css\'))\n    response.files.append(URL(\'static\', \'css/box_bank.css\'))\n    response.files.append(URL(\'static\', \'css/box_bank_contact.css\'))\n    postals = db(db.bank.ID_BK==request.args[0]).select()\n    phones = db(db.bank_2.ID_BK_2==request.args[0]).select(db.bank_2.Phone_BK)\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.bank.ID_BK==request.args[0]).update(Rating_BK=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n@auth.requires_login()\ndef entertainment():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="entertainment").select(distinct=True)\n            t3.append(x)\n\n        #y = db(x).select(distinct=True)\n        #rows =  db(db.places).select(join=enter_rows(db.places.Place_ID==enter_rows))\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        enter_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="entertainment" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef enter_place():\n    response.files.append(URL(\'static\', \'css/background_entertainment.css\'))\n    response.files.append(URL(\'static\', \'css/box_entertainment.css\'))\n    postals = db(db.entertainment_hub.ID_EH==request.args[0]).select()\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.entertainment_hub.ID_EH==request.args[0]).update(Rating_EH=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n@auth.requires_login()\ndef fuel_agency():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="fuel agency").select(distinct=True)\n            t3.append(x)\n\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        fag_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="fuel agency" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef fuelagency_place():\n    response.files.append(URL(\'static\', \'css/background_fuelagency.css\'))\n    response.files.append(URL(\'static\', \'css/box_fuel.css\'))\n    postals = db(db.fuel_agency.ID_FA==request.args[0]).select()\n    x = db.fuel_agency(db.fuel_agency.ID_FA==request.args[0])\n    affils = db(db.fuel_company.ID_FC==x.ID_FC_R).select()\n    phones = db(db.fuel_agency_2.ID_FA_2==request.args[0]).select(db.fuel_agency_2.Phone_FA,distinct=True)\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.fuel_agency.ID_FA==request.args[0]).update(Rating_FA=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n\n@auth.requires_login()\ndef fuel_company():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    if check_form.accepted:\n        t=form.components[0]\n        fc_rows = db(db.place_distance.place2==t).select(db.place_distance.place1,db.place_distance.distance,orderby = db.place_distance.distance)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        fc_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="fuel company" order by rating desc\')\n    return locals()\n\n\n@auth.requires_login()\ndef fuelcompany_place():\n    response.files.append(URL(\'static\', \'css/background_fuelcompany.css\'))\n    response.files.append(URL(\'static\', \'css/box_fuel.css\'))\n    postals = db(db.fuel_company.ID_FC==request.args[0]).select()\n    \n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    return locals()\n\n@auth.requires_login()\ndef handloom():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="handloom").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        hand_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="handloom" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef handloom_place():\n    response.files.append(URL(\'static\', \'css/background_handloom.css\'))\n    response.files.append(URL(\'static\', \'css/box_handloom.css\'))\n    postals = db(db.local_handlooms.ID_LH==request.args[0]).select()\n    phones = db(db.local_handlooms_2.ID_LH_2==request.args[0]).select(db.local_handlooms_2.Phone_LH)\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.local_handlooms.ID_LH==request.args[0]).update(Rating_LH=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n\n\n@auth.requires_login()\ndef heritage():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="heritage").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        hrei_rows = db.executesql(\'select Place_Name as place1,rating,Place_ID from places where Place_Type="heritage" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef heri_place():\n    response.files.append(URL(\'static\', \'css/background_heritage.css\'))\n    response.files.append(URL(\'static\', \'css/box_heritage.css\'))\n    #postal = db.heritage_areas(request.args)\n    #posts = db.executesql(\'select * from heritage_areas where ID_HA="ha1"\')\n    postals = db(db.heritage_areas.ID_HA==request.args[0]).select()\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.heritage_areas.ID_HA==request.args[0]).update(Rating_HA=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n\n\n\n@auth.requires_login()\ndef hotel():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="hotel").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        hotel_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="hotel" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef hotel_place():\n    response.files.append(URL(\'static\', \'css/background_hotel.css\'))\n    response.files.append(URL(\'static\', \'css/box_entertainment.css\'))\n    postals = db(db.hotels.ID_HT==request.args[0]).select()\n    phones = db(db.hotels_2.ID_HT_2==request.args[0]).select(db.hotels_2.Phone_HT)\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.hotels.ID_HT==request.args[0]).update(Rating_HT=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n@auth.requires_login()\ndef recreation():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="recreation").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        rec_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="recreation" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef recreat_place():\n    response.files.append(URL(\'static\', \'css/background_recreation.css\'))\n    response.files.append(URL(\'static\', \'css/box_entertainment.css\'))\n    postals = db(db.recreation_hub.ID_RH==request.args[0]).select()\n    \n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.recreation_hub.ID_RH==request.args[0]).update(Rating_RH=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n\n\n@auth.requires_login()\ndef restaurant():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="restaurant").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        restaur_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="restaurant" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef restaur_place():\n    response.files.append(URL(\'static\', \'css/background_restaurant.css\'))\n    response.files.append(URL(\'static\', \'css/box_fuel.css\'))\n    postals = db(db.restaurant.ID_RS==request.args[0]).select()\n    phones = db(db.restaurant_2.ID_RS_2==request.args[0]).select(db.restaurant_2.Phone_RS)\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.restaurant.ID_RS==request.args[0]).update(Rating_RS=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n@auth.requires_login()\ndef spiritual():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="spiritual").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        spirit_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="spiritual" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef spirit_place():\n    response.files.append(URL(\'static\', \'css/background_spiritual.css\'))\n    response.files.append(URL(\'static\', \'css/box_spiritual.css\'))\n    postals = db(db.spiritual_hub.ID_SH==request.args[0]).select()\n    \n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.spiritual_hub.ID_SH==request.args[0]).update(Rating_SH=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n@auth.requires_login()\ndef taxi_service():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="taxi service").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        taxi_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="taxi service" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef taxi_place():\n    response.files.append(URL(\'static\', \'css/background_taxiservice.css\'))\n    response.files.append(URL(\'static\', \'css/box_taxiservice.css\'))\n    postals = db(db.taxi_service.ID_TS==request.args[0]).select()\n    phones = db(db.taxi_service_2.ID_TS_2==request.args[0]).select(db.taxi_service_2.Phone_TS,distinct=True)\n    carprices = db(db.taxi_service_2.ID_TS_2==request.args[0]).select(db.taxi_service_2.Car_Price_TS,distinct=True)\n    cartypes = db(db.taxi_service_2.ID_TS_2==request.args[0]).select(db.taxi_service_2.Car_Types_TS,distinct=True)\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.taxi_service.ID_TS==request.args[0]).update(Rating_TS=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n@auth.requires_login()\ndef travel_agency():\n    #hrei_rows = db(db.places.place_type=="heritage").select(orderby = ~db.places.rating)\n    form = SQLFORM.factory(Field(\'Current_Location\', requires=IS_IN_DB(db, \'places.place_name\', \'%(place_name)s\')))\n    check_form = form.process()\n    t=1\n    t1=[]\n    t3=[]\n    if check_form.accepted:\n        t=form.vars.Current_Location\n        t1=db(db.places.place_name==t).select(db.places.Place_ID)\n        for t2 in t1:\n            enter_rows = db(db.place_distance.place2==t2.Place_ID).select(db.place_distance.place1,orderby = db.place_distance.distance)\n        for r in enter_rows:\n            x = db(db.places.Place_ID==r.place1 and db.places.place_type=="travel agency").select(distinct=True)\n            t3.append(x)\n        #hrei_near_rows = db.executesql(\'select place1,distance from place_distance where place2=selected_place order by distance\')\n    else:\n        travel_rows = db.executesql(\'select place_name,rating,Place_ID from places where place_type="travel agency" order by rating desc\')\n    return locals()\n\n@auth.requires_login()\ndef travel_place():\n    response.files.append(URL(\'static\', \'css/background_travelagency.css\'))\n    response.files.append(URL(\'static\', \'css/box_fuel.css\'))\n    postals = db(db.travel_agency.ID_TA==request.args[0]).select()\n    phones = db(db.Travel_Agency_2.ID_TA_2==request.args[0]).select(db.Travel_Agency_2.Phone_TA,distinct = True)\n    tour_package = db(db.Travel_Agency_2.ID_TA_2==request.args[0]).select(db.Travel_Agency_2.Tour_Package_TA,distinct = True)\n    db.visit_places.Place_ID.default = request.args[0]\n    db.visit_places.Place_ID.readable = False\n    db.visit_places.Place_ID.writable = False\n\n    db.visit_places.RU_ID_Place.readable = False\n    db.visit_places.RU_ID_Place.writable = False\n\n    form = SQLFORM(db.visit_places).process()\n    comments = db(db.visit_places.Place_ID==request.args[0]).select()\n\n    db.visit_places.RU_ID_Place.default = db.visit_places.created_by\n    if form.accepted:\n        if len(comments)!=0:\n            sume=0\n            for commente in comments:\n                sume+= (commente.User_Rating_Place)\n                db(db.travel_agency.ID_TA==request.args[0]).update(Rating_TA=sume/len(comments))\n                db(db.places.Place_ID==request.args[0]).update(rating=sume/len(comments))\n    return locals()\n\n\n\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    #rows = db(db.blog_post).select()\n    #response.flash = T("Welcome to Incredible Varanasi")\n    redirect(URL(\'home\'))\n    return locals()\n\n@auth.requires_login()\ndef comment():\n    if not db.auth_user[auth.user_id]:\n        auth.logout()\n    if auth.user and db.auth_user[auth.user_id].registration_key == \'blocked\':\n       auth.logout()\n    x = request.args[0]\n    y = request.args[1]\n    postals = db(db.visit_reply.post_id==x).select()\n    db.visit_reply.post_id.default = x\n    db.visit_reply.post_id.readable = False\n    db.visit_reply.post_id.writable = False\n    form = SQLFORM(db.visit_reply).process()\n\n    if form.accepted:\n        postals = db(db.visit_reply.post_id==request.args[0]).select()\n    return locals()\n    \ndef create():\n    \n    return locals()\ndef show():\n    return "Team MADS"\n\ndef user():\n    rpx = \'\'\n    registerurl=URL(\'default\',\'user\',args=\'register\',vars=dict(_next=\'/init/default/somepage\'))\n    if request.vars.token:\n        auth.settings.login_form = rpxform\n        return dict(form=auth())\n    if \'login\' in request.args:\n        rpx = rpxform.login_form()\n        html = DIV(H1(\'Login\'),\n               rpx,BR(),BR(),\n               H1(A(\'Click here to register\',\n                       _href=registerurl),BR(),\n                       \'Or sign-in using your email and password\'),\n               auth(),\n              )\n    else:\n        html = auth()\n\n    return dict(form=html)\n    return dict(form=auth())\n\n@cache.action()\ndef edit_post_comment():\n    id = request.args(0,cast=int)\n    form = SQLFORM(db.visit_reply,id).process()\n    return locals()\n\n#def edit_post():\n#    id = request.args(0,cast=int)\n#    form = SQLFORM(db.visit_places,id).process()\n#    return locals()\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_login()\ndef api():\n    """\n    this is example of API with access control\n    WEB2PY provides Hypermedia API (Collection+JSON) Experimental\n    """\n    from gluon.contrib.hypermedia import Collection\n    rules = {\n        \'<tablename>\': {\'GET\':{},\'POST\':{},\'PUT\':{},\'DELETE\':{}},\n        }\n    return Collection(db).process(request,response,rules)\n\nresponse._vars=response._caller(bank_place)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'sqlite3'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of IntegrityError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of IntegrityError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of IntegrityError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of IntegrityError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of IntegrityError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of IntegrityError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of IntegrityError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of IntegrityError object>'
p35
sS'__class__'
p36
S"<class 'sqlite3.IntegrityError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of IntegrityError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of IntegrityError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of IntegrityError object>"
p45
sS'args'
p46
S"('foreign key constraint failed',)"
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of IntegrityError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of IntegrityError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of IntegrityError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of IntegrityError object>"
p57
ssS'evalue'
p58
S'foreign key constraint failed'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\x94[\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>app1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>BK2</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-4625ce5a-de3a-4bab-8ab1-05dee811242c<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_app1</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-3b8d1fd3-c5df-41e3-af8b-5ffd584656fb<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-fcf9c79d-d640-46a9-8c42-ea5fc5770d55<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-fcf9c79d-d640-46a9-8c42-ea5fc5770d55; session_id_app1=127.0.0.1-3b8d1fd3-c5df-41e3-af8b-5ffd584656fb; session_id_admin=127.0.0.1-4625ce5a-de3a-4bab-8ab1-05dee811242c</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/app1/default/bank_place/BK2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>3688</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>DS</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;K:\\\\web2py_win\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;K:\\\\web2py_win\\\\web2py\\\\applications\\\\app1\\\\&#x27;, &#x27;K:\\\\web2py_win\\\\web2py\\\\applications\\\\welcome\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>K:\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1ef4670: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::817b:1680:b17a:2e9c%4&#x27;, &#x27;10.9.11.113&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;DS&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;K:\\\\web2py_win\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>K:\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate, sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-fcf9c79d-d640-46a9-8c42-ea5fc5770d55; session_id_app1=127.0.0.1-3b8d1fd3-c5df-41e3-af8b-5ffd584656fb; session_id_admin=127.0.0.1-4625ce5a-de3a-4bab-8ab1-05dee811242c</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::817b:1680:b17a:2e9c%4</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>10.9.11.113</div></td></tr><tr><td><div>DS</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/app1/default/bank_place/BK2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>3688</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/app1/default/bank_place/BK2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>DS</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>K:\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.11-stable+timestamp.2014.09.15.23.35.11</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x005E60D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x02E8FA78&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x06C976F0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x005E60D0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x02E8FA78&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x06C976F0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>K:\\web2py_win\\web2py\\applications\\app1\\</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>bank_place</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;K:\\\\web2py_win\\\\web2py\\\\applications\\\\admin\\\\&#x27;, &#x27;K:\\\\web2py_win\\\\web2py\\\\applications\\\\app1\\\\&#x27;, &#x27;K:\\\\web2py_win\\\\web2py\\\\applications\\\\welcome\\\\&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>K:\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x1ef4670: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;fe80::817b:1680:b17a:2e9c%4&#x27;, &#x27;10.9.11.113&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;scheduler_groups&#x27;: None, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;DS&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;K:\\\\web2py_win\\\\web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>K:\\web2py_win\\web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>fe80::817b:1680:b17a:2e9c%4</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>10.9.11.113</div></td></tr><tr><td><div>DS</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.11-stable+timestamp.2014.09.15.23.35.11</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_sheduler</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 11, 29, 1, 44, 27, 619000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div>BK2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/app1/default/bank_place/BK2</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 11, 28, 20, 14, 27, 619000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>app1/127.0.0.1.2014-11-29.01-44-27.56073c19-c7eb-4c12-b586-fefeba7ca005</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x074B7730&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'K:\\web2py_win\\web2py\\gluon\\restricted.py'
p67
sS'dump'
p68
(dp69
sS'lnum'
p70
I224
sS'lines'
p71
(dp72
sS'call'
p73
S"(code='# -*- coding: utf-8 -*-\\n# this file is released ...es)\\n\\nresponse._vars=response._caller(bank_place)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer=r'K:\\web2py_win\\web2py\\applications\\app1\\controllers/default.py')"
p74
sS'func'
p75
S'restricted'
p76
sa(dp77
g66
S'K:\\web2py_win\\web2py\\applications\\app1\\controllers\\default.py'
p78
sg68
(dp79
sg70
I718
sg71
(dp80
I707
S'def api():'
p81
sI708
S'    """'
p82
sI709
S'    this is example of API with access control'
p83
sI710
S'    WEB2PY provides Hypermedia API (Collection+JSON) Experimental'
p84
sI711
S'    """'
p85
sI712
S'    from gluon.contrib.hypermedia import Collection'
p86
sI713
S'    rules = {'
p87
sI714
S"        '<tablename>': {'GET':{},'POST':{},'PUT':{},'DELETE':{}},"
p88
sI715
S'        }'
p89
sI716
S'    return Collection(db).process(request,response,rules)'
p90
ssg73
S'()'
p91
sg75
S'<module>'
p92
sa(dp93
g66
S'K:\\web2py_win\\web2py\\gluon\\globals.py'
p94
sg68
(dp95
sg70
I392
sg71
(dp96
sg73
S'(f=<function bank_place>)'
p97
sg75
S'<lambda>'
p98
sa(dp99
g66
S'K:\\web2py_win\\web2py\\gluon\\tools.py'
p100
sg68
(dp101
sg70
I3439
sg71
(dp102
sg73
S'(*a=(), **b={})'
p103
sg75
S'f'
sa(dp104
g66
S'K:\\web2py_win\\web2py\\applications\\app1\\controllers\\default.py'
p105
sg68
(dp106
S'auth.logout'
p107
S'<bound method Auth.logout of <gluon.tools.Auth object>>'
p108
sS'global auth'
p109
S'<gluon.tools.Auth object>'
p110
ssg70
I61
sg71
(dp111
I64
S"    response.files.append(URL('static', 'css/background_bank.css'))"
p112
sI65
S"    response.files.append(URL('static', 'css/box_bank.css'))"
p113
sI56
S''
sI57
S'@auth.requires_login()'
p114
sI58
S'def bank_place():'
p115
sI59
S'    #Note, auth.user refers to a copy of the user record stored in the session, so changing it does not affect the database record.'
p116
sI60
S'    if not db.auth_user[auth.user_id]:'
p117
sI61
S'        auth.logout()'
p118
sI62
S"    elif auth.user and db.auth_user[auth.user_id].registration_key == 'blocked':"
p119
sI63
S'        auth.logout()'
p120
ssg73
S'()'
p121
sg75
S'bank_place'
p122
sa(dp123
g66
S'K:\\web2py_win\\web2py\\gluon\\tools.py'
p124
sg68
(dp125
sg70
I2646
sg71
(dp126
sg73
S"(self=<gluon.tools.Auth object>, next='/app1/default/index', onlogout=None, log='User %(id)s Logged-out')"
p127
sg75
S'logout'
p128
sa(dp129
g66
S'K:\\web2py_win\\web2py\\gluon\\tools.py'
p130
sg68
(dp131
sg70
I2019
sg71
(dp132
sg73
S"(self=<gluon.tools.Auth object>, description='User %(id)s Logged-out', vars=<Row {'first_name': 'Anupam', 'last_name': 'Beni...ord_key': '', 'registration_key': '', 'id': 21L}>, origin='auth')"
p133
sg75
S'log_event'
p134
sa(dp135
g66
S'K:\\web2py_win\\web2py\\gluon\\dal.py'
p136
sg68
(dp137
sg70
I9317
sg71
(dp138
sg73
S"(self=<Table auth_event (id,time_stamp,client_ip,user_id,origin,description)>, **fields={'client_ip': '127.0.0.1', 'description': 'User 21 Logged-out', 'origin': 'auth', 'time_stamp': datetime.datetime(2014, 11, 29, 1, 44, 27, 619000), 'user_id': 21L})"
p139
sg75
S'insert'
p140
sa(dp141
g66
S'K:\\web2py_win\\web2py\\gluon\\dal.py'
p142
sg68
(dp143
sg70
I1361
sg71
(dp144
sg73
S"(self=<gluon.dal.SQLiteAdapter object>, table=<Table auth_event (id,time_stamp,client_ip,user_id,origin,description)>, fields=[(<gluon.dal.Field object>, 'auth'), (<gluon.dal.Field object>, datetime.datetime(2014, 11, 29, 1, 44, 27, 619000)), (<gluon.dal.Field object>, '127.0.0.1'), (<gluon.dal.Field object>, 21L), (<gluon.dal.Field object>, 'User 21 Logged-out')])"
p145
sg75
g140
sasS'pyver'
p146
S'Python 2.7.6: K:\\web2py_win\\web2py\\web2py.exe (prefix: C:\\Python27)'
p147
sS'session'
p148
g61
(S's\xe2\x0b\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">auth</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">expiration</td><td style="vertical-align:top;">:</td><td><div>3600</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">hmac_key</td><td style="vertical-align:top;">:</td><td><div>b6413305-374e-452a-b228-6854fe2d56bf</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_visit</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 11, 29, 1, 44, 27, 619000)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remember_me</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">email</td><td style="vertical-align:top;">:</td><td><div>anupam.beniwal.cse12@iitbhu.ac.in</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">first_name</td><td style="vertical-align:top;">:</td><td><div>Anupam</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">id</td><td style="vertical-align:top;">:</td><td><div>21L</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_name</td><td style="vertical-align:top;">:</td><td><div>Beniwal</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_id</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">registration_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">reset_password_key</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">user_groups</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">auth_two_factor</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">auth_two_factor_enabled</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">auth_two_factor_tries_left</td><td style="vertical-align:top;">:</td><td><div>3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">auth_two_factor_user</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_orderby</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">last_query</td><td style="vertical-align:top;">:</td><td><div>db.auth_user.id&gt;0</div></td></tr></table></div>'
tRp149
sS'etype'
p150
S"<class 'sqlite3.IntegrityError'>"
p151
sS'date'
p152
S'Sat Nov 29 01:44:28 2014'
p153
sS'response'
p154
g61
(S'si\x1e\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x074B7160&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_app1</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-3b8d1fd3-c5df-41e3-af8b-5ffd584656fb<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">google_analytics_id</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">logo</td><td style="vertical-align:top;">:</td><td><div><a class="brand" href="/app1/default/home"><b>Incredible Varanasi</b><sup> MADS</sup></a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div><table><tr><td><div>Home</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/app1/default/home</div></td></tr><tr><td><div><table></table></div></td></tr></table></div></td></tr><tr><td><div><table><tr><td><div><span class="highlighted">About Us</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>show</div></td></tr><tr><td><div><table><tr><td><div><table><tr><td><div>Contact</div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/app1/default/create</div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">author</td><td style="vertical-align:top;">:</td><td><div>Mehul Jain &lt;mehul.jain.cse12@iitbhu.ac.in&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generator</td><td style="vertical-align:top;">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">keywords</td><td style="vertical-align:top;">:</td><td><div>home</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/bank_place/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_app1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;K:\\\\web2py_win\\\\web2py\\\\applications\\\\app1\\\\sessions\\\\1a3\\\\026\\\\127.0.0.1-3b8d1fd3-c5df-41e3-af8b-5ffd584656fb&#x27;, mode &#x27;rb+&#x27; at 0x0715D758&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>K:\\web2py_win\\web2py\\applications\\app1\\sessions\\127.0.0.1-3b8d1fd3-c5df-41e3-af8b-5ffd584656fb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>b9d4fd1d2222f40f7a532f732dc03268</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-3b8d1fd3-c5df-41e3-af8b-5ffd584656fb</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_app1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>app1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">subtitle</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">title</td><td style="vertical-align:top;">:</td><td><div>App1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>default/bank_place.html</div></td></tr></table></div>'
tRp155
sS'locals'
p156
(dp157
S'fields'
p158
S"[(<gluon.dal.Field object>, 'auth'), (<gluon.dal.Field object>, datetime.datetime(2014, 11, 29, 1, 44, 27, 619000)), (<gluon.dal.Field object>, '127.0.0.1'), (<gluon.dal.Field object>, 21L), (<gluon.dal.Field object>, 'User 21 Logged-out')]"
p159
sS'self'
p160
S'<gluon.dal.SQLiteAdapter object>'
p161
sS'e'
S"IntegrityError('foreign key constraint failed',)"
p162
sS'table'
p163
S'<Table auth_event (id,time_stamp,client_ip,user_id,origin,description)>'
p164
sS'query'
p165
S'"INSERT INTO auth_event(origin,time_stamp,client_...9 01:44:27\',\'127.0.0.1\',21,\'User 21 Logged-out\');"'
p166
sssS'traceback'
p167
S'Traceback (most recent call last):\n  File "gluon/restricted.py", line 224, in restricted\n  File "K:\\web2py_win\\web2py\\applications\\app1\\controllers/default.py", line 718, in <module>\n  File "gluon/globals.py", line 392, in <lambda>\n  File "gluon/tools.py", line 3439, in f\n  File "K:\\web2py_win\\web2py\\applications\\app1\\controllers/default.py", line 61, in bank_place\n    auth.logout()\n  File "gluon/tools.py", line 2646, in logout\n  File "gluon/tools.py", line 2019, in log_event\n  File "gluon/dal.py", line 9317, in insert\n  File "gluon/dal.py", line 1361, in insert\nIntegrityError: foreign key constraint failed\n'
p168
s.